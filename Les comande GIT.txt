
start a working area (see also: git help tutorial)
   clone     Clone a repository into a new directory
   init      Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add       Add file contents to the index
   mv        Move or rename a file, a directory, or a symlink
   restore   Restore working tree files
   rm        Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect    Use binary search to find the commit that introduced a bug
   diff      Show changes between commits, commit and working tree, etc
   grep      Print lines matching a pattern
   log       Show commit logs
   show      Show various types of objects
   status    Show the working tree status

grow, mark and tweak your common history
   branch    List, create, or delete branches
   commit    Record changes to the repository
   merge     Join two or more development histories together
   rebase    Reapply commits on top of another base tip
   reset     Reset current HEAD to the specified state
   switch    Switch branches
   tag       Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch     Download objects and refs from another repository
   pull      Fetch from and integrate with another repository or a local branch
   push      Update remote refs along with associated objects

   -------------------- Traduction FR --------------------

DÃ©marrer une zone de travail (voir aussi : git help tutorial)

    clone â†’ Cloner un dÃ©pÃ´t dans un nouveau rÃ©pertoire

    init â†’ CrÃ©er un dÃ©pÃ´t Git vide ou rÃ©initialiser un dÃ©pÃ´t existant

Travailler sur les modifications en cours (voir aussi : git help everyday)

    add â†’ Ajouter le contenu des fichiers Ã  lâ€™index

    mv â†’ DÃ©placer ou renommer un fichier, un dossier ou un lien symbolique

    restore â†’ Restaurer des fichiers dans lâ€™arborescence de travail

    rm â†’ Supprimer des fichiers de lâ€™arborescence de travail et de lâ€™index

Examiner lâ€™historique et lâ€™Ã©tat (voir aussi : git help revisions)

    bisect â†’ Utiliser une recherche binaire pour trouver le commit qui a introduit un bug

    diff â†’ Afficher les diffÃ©rences entre les commits, ou entre le commit et lâ€™arborescence de travail

    grep â†’ Afficher les lignes correspondant Ã  un motif

    log â†’ Afficher lâ€™historique des commits

    show â†’ Afficher diffÃ©rents types dâ€™objets Git

    status â†’ Afficher lâ€™Ã©tat de lâ€™arborescence de travail

Faire Ã©voluer, marquer et ajuster lâ€™historique commun

    branch â†’ Lister, crÃ©er ou supprimer des branches

    commit â†’ Enregistrer des modifications dans le dÃ©pÃ´t

    merge â†’ Fusionner deux ou plusieurs historiques de dÃ©veloppement

    rebase â†’ RÃ©appliquer des commits sur une autre branche de base

    reset â†’ RÃ©initialiser le HEAD actuel Ã  un Ã©tat spÃ©cifiÃ©

    switch â†’ Changer de branche

    tag â†’ CrÃ©er, lister, supprimer ou vÃ©rifier un tag signÃ© avec GPG

Collaborer (voir aussi : git help workflows)

    fetch â†’ TÃ©lÃ©charger des objets et des rÃ©fÃ©rences depuis un autre dÃ©pÃ´t

    pull â†’ RÃ©cupÃ©rer et intÃ©grer des modifications depuis un autre dÃ©pÃ´t ou une branche locale

    push â†’ Mettre Ã  jour les rÃ©fÃ©rences distantes avec les objets associÃ©s


EX: 

Mets master au mÃªme niveau que portefolioDavidSout_PHP (ou inversement)
ðŸ‘‰ Si tu veux que master soit identique Ã  portefolioDavidSout_PHP :

git checkout master
git merge portefolioDavidSout_PHP

--------------
Supprime les 1 branches inutiles (localement) :

git branch -D cv-portFolio-Comune-Branche

--------------
Supprime-les aussi sur le dÃ©pÃ´t distant (GitHub, GitLab, etc.) si nÃ©cessaire :

git push origin --delete cv-portFolio-Comune-Branche

--------------
abandonner le merge en cours sur cv-portFolio-PC-Fix.
  Ã‡a va remettre la branche cv-portFolio-PC-Fix Ã  son Ã©tat avant le merge.

git merge --abort